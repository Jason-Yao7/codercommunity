<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--mapper文件相当于DAO接口的‘实现类’，namespace属性要指定`实现`DAO接口的全限定名-->
<mapper namespace="com.imooc.bilibili.dao.UserDao">
    <select id="getUserByPhone" resultType="User">
        select *
        from t_user
        where phone = #{phone}
    </select>
    <select id="getUserById" resultType="User">
        select *
        from t_user
        where id = #{id}
    </select>

    <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(phone, email, password, salt, createTime)
        values (#{phone}, #{email}, #{password}, #{salt}, #{createTime})
    </insert>
    <insert id="addUserInfo" parameterType="UserInfo">
        insert into t_user_info(userId, nick, avatar, sign, gender, birth, createTime)
        values (#{userId}, #{nick}, #{avatar}, #{sign}, #{gender}, #{birth}, #{createTime})
    </insert>
    <select id="getUserInfoByUserId" resultType="UserInfo">
        select *
        from t_user_info
        where userId = #{userId}
    </select>

    <update id="updateUserInfos" parameterType="userInfo">
        update
        t_user_info
        set
        <if test="nick != null and nick != '' ">
            nick = #{nick},
        </if>
        <if test="avatar != null">
            avatar = #{avatar},
        </if>
        <if test="sign != null">
            sign = #{sign},
        </if>
        <if test="birth != null and birth != '' ">
            birth = #{birth},
        </if>
        <if test="gender != null and gender != '' ">
            gender = #{gender},
        </if>
        updateTime = #{updateTime}
        where
        userId = #{userId}
    </update>
    <select id="getUserByPhoneOrEmail" parameterType="java.lang.String" resultType="com.imooc.bilibili.domain.User">
        select *
        from t_user
        where phone = #{phone}
           or email = #{email}
    </select>
    <update id="updateUsers" parameterType="com.imooc.bilibili.domain.User">
        update
        t_user
        set
        <if test="phone != null and phone != '' ">
            phone = #{phone},
        </if>
        <if test="email != null and email != '' ">
            email = #{email},
        </if>
        <if test="password != null and password != '' ">
            password = #{password},
        </if>
        updateTime = #{updateTime}
        where
        id = #{id}
    </update>

    <select id="getUserInfoByUserIds" resultType="UserInfo">
        select *
        from t_user_info
        <where>
            <if test="userIdList!=null and userIdList.size >0">
                userId in
                <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
        </where>
        ;
    </select>
    <select id="pageCountUserInfos" parameterType="Map" resultType="Integer">
        select count(1)
        from t_user_info
        <where>
            <if test="nick!=null and nick!=''">
                nick like '%${nick}%'
            </if>
        </where>
    </select>
    <select id="pageListUserInfos" parameterType="Map" resultType="UserInfo">
        select *
        from t_user_info
        <where>
            <if test="nick!=null and nick!=''">
                nick like '%${nick}%'
            </if>
        </where>
        order by id desc limit #{start},#{limit}
    </select>

    <delete id="deleteRefreshToken">
        delete
        from t_refresh_token
        where refreshToken = #{refreshToken}
           or userId = #{userId};
    </delete>
    <insert id="addRefreshToken">
        insert into t_refresh_token(refreshToken, userId, createTime)
        values (#{refreshToken}, #{userId}, #{createTime});
    </insert>

    <select id="getRefreshTokenDetail" resultType="RefreshTokenDetail">
        select *
        from t_refresh_token
        where refreshToken = #{refreshToken};
    </select>

    <select id="batchGetUserInfoByUserIds" resultType="com.imooc.bilibili.domain.UserInfo">
        select
        *
        from
        t_user_info
        where
        userId in
        <foreach collection="userIdList" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </select>

</mapper>